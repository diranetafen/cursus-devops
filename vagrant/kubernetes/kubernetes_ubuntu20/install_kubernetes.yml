- hosts: localhost
  become: true

  vars:
    token: "783bde.3f89s0fje9f38fhf"
    swap_disabled: true
    # The follow two parameter was explained here https://github.com/geerlingguy/ansible-role-kubernetes#variables-to-configure-kubeadm-and-kubelet-through-command-line-options
    kubernetes_pod_network:
      cni: 'flannel'
      cidr: '10.244.0.0/16'  
    kubernetes_version: "{{ kubernetes_version_rhel_package.split('.')[:2]  | join('.') }}"
    kubernetes_kubelet_extra_args: "--node-ip={{ ansible_enp0s8.ipv4.address }}"
    crictl_version: "v1.31.1"
    kubernetes_config_kubelet_configuration:
      cgroupDriver: "systemd"
      failSwapOn: false
    kubernetes_config_kube_proxy_configuration:
      ipvs:
        strictARP: true
    kubernetes_config_init_configuration:
      # details of these parameters could be found here https://pkg.go.dev/k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm/v1beta1
      localAPIEndpoint:
        advertiseAddress: "{{ kubernetes_apiserver_advertise_address | default(ansible_default_ipv4.address, true) }}"
      bootstrapTokens:
        - token: "{{ token }}"
          description: "another bootstrap token"
          usages:
          - authentication
          - signing
          groups:
          - system:bootstrappers:kubeadm:default-node-token
    kubernetes_allow_pods_on_master: true
  pre_tasks:
  - name: Enable br_netfilter module
    modprobe:
      name: br_netfilter
      state: present
    when: >
      ansible_distribution != 'Debian' 
  - name: disable swap
    shell: |
      swapon -a
    when: swap_disabled == true
    
  - name: install ntp
    package:
      name: ntp
      state: present
  - name: update time
    service: name=ntp state=restarted
  - name: ipforward to 1
    sysctl:
      name: net.ipv4.ip_forward
      value: '1'
      sysctl_set: true
      state: present

      
  roles:
    - role: geerlingguy.pip
    - role: geerlingguy.containerd
    - role: geerlingguy.kubernetes
  post_tasks:
  - name: Configure Flannel networking for enp0s8
    shell: "curl {{ kubernetes_flannel_manifest_file }} | sed '/kube-subnet-mgr.*/a\\        - --iface=enp0s8' | kubectl apply -f -"
    register: flannel_result
    changed_when: "'created' in flannel_result.stdout"
    when: kubernetes_pod_network.cni == 'flannel' and kubernetes_role == 'control_plane' and installation_method == 'vagrant'
    retries: 3
    delay: 5

  - name: Download crictl binary
    get_url:
      url: "https://github.com/kubernetes-sigs/cri-tools/releases/download/{{ crictl_version }}/crictl-{{ crictl_version }}-linux-amd64.tar.gz"
      dest: /tmp/crictl.tar.gz

  - name: Extract crictl binary
    ansible.builtin.unarchive:
      src: /tmp/crictl.tar.gz
      dest: /usr/local/bin
      remote_src: yes

  - name: Remove crictl archive
    ansible.builtin.file:
      path: /tmp/crictl.tar.gz
      state: absent

  - name: Create crictl configuration directory
    ansible.builtin.file:
      path: /etc/crictl.d
      state: directory

  - name: Configure crictl
    ansible.builtin.copy:
      content: |
        runtime-endpoint: unix:///var/run/containerd/containerd.sock
        image-endpoint: unix:///var/run/containerd/containerd.sock
        timeout: 2
        debug: true
        pull-image-on-create: false
      dest: /etc/crictl.yaml    
